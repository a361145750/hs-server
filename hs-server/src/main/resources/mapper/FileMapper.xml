<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hs.server.dao.impl.FileMapper" >
  <resultMap id="BaseResultMap" type="com.hs.server.domain.File" >
    <id column="FILE_ID" property="fileId" jdbcType="BIGINT" />
    <result column="FILE_NAME" property="fileName" jdbcType="VARCHAR" />
    <result column="FILE_PATH" property="filePath" jdbcType="VARCHAR" />
    <result column="FILE_SIZE" property="fileSize" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    FILE_ID, FILE_NAME, FILE_PATH, FILE_SIZE
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from file
    where FILE_ID = #{fileId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from file
    where FILE_ID = #{fileId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hs.server.domain.FileExample" >
    delete from file
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hs.server.domain.File"  useGeneratedKeys="true"  keyProperty="fileId">
    insert into file (FILE_NAME, FILE_PATH,
      FILE_SIZE)
    values (#{fileName,jdbcType=VARCHAR}, #{filePath,jdbcType=VARCHAR},
      #{fileSize,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hs.server.domain.File" >
    insert into file
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fileName != null" >
        FILE_NAME,
      </if>
      <if test="filePath != null" >
        FILE_PATH,
      </if>
      <if test="fileSize != null" >
        FILE_SIZE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fileName != null" >
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null" >
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null" >
        #{fileSize,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update file
    <set >
      <if test="record.fileId != null" >
        FILE_ID = #{record.fileId,jdbcType=BIGINT},
      </if>
      <if test="record.fileName != null" >
        FILE_NAME = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.filePath != null" >
        FILE_PATH = #{record.filePath,jdbcType=VARCHAR},
      </if>
      <if test="record.fileSize != null" >
        FILE_SIZE = #{record.fileSize,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update file
    set FILE_ID = #{record.fileId,jdbcType=BIGINT},
      FILE_NAME = #{record.fileName,jdbcType=VARCHAR},
      FILE_PATH = #{record.filePath,jdbcType=VARCHAR},
      FILE_SIZE = #{record.fileSize,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hs.server.domain.File" >
    update file
    <set >
      <if test="fileName != null" >
        FILE_NAME = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null" >
        FILE_PATH = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null" >
        FILE_SIZE = #{fileSize,jdbcType=VARCHAR},
      </if>
    </set>
    where FILE_ID = #{fileId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hs.server.domain.File" >
    update file
    set FILE_NAME = #{fileName,jdbcType=VARCHAR},
      FILE_PATH = #{filePath,jdbcType=VARCHAR},
      FILE_SIZE = #{fileSize,jdbcType=VARCHAR}
    where FILE_ID = #{fileId,jdbcType=BIGINT}
  </update>
</mapper>