<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hs.server.dao.impl.UserMapper" >
  <resultMap id="BaseResultMap" type="com.hs.server.domain.User" >
    <id column="USER_ID" property="userId" jdbcType="BIGINT" />
    <result column="LOGIN_ID" property="loginId" jdbcType="VARCHAR" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="PASS_WORD" property="passWord" jdbcType="VARCHAR" />
    <result column="ROLE" property="role" jdbcType="BIGINT" />
    <result column="USER_RIGHT" property="userRight" jdbcType="BIGINT" />
    <result column="CREATE_BY" property="createBy" jdbcType="VARCHAR" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="UPDATE_BY" property="updateBy" jdbcType="VARCHAR" />
    <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    USER_ID, LOGIN_ID, USER_NAME, PASS_WORD, ROLE, USER_RIGHT, CREATE_BY, CREATE_DATE, 
    UPDATE_BY, UPDATE_DATE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hs.server.domain.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from s_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from s_user
    where USER_ID = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from s_user
    where USER_ID = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hs.server.domain.User" useGeneratedKeys="true"  keyProperty="userId" >
    insert into s_user (LOGIN_ID, USER_NAME,
      PASS_WORD, ROLE, USER_RIGHT, 
      CREATE_BY, CREATE_DATE, UPDATE_BY, 
      UPDATE_DATE)
    values (#{loginId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR},
      #{passWord,jdbcType=VARCHAR}, #{role,jdbcType=BIGINT}, #{userRight,jdbcType=BIGINT}, 
      #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hs.server.domain.User"  useGeneratedKeys="true"  keyProperty="userId" >
    insert into s_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="loginId != null" >
        LOGIN_ID,
      </if>
      <if test="userName != null" >
        USER_NAME,
      </if>
      <if test="passWord != null" >
        PASS_WORD,
      </if>
      <if test="role != null" >
        ROLE,
      </if>
      <if test="userRight != null" >
        USER_RIGHT,
      </if>
      <if test="createBy != null" >
        CREATE_BY,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="updateBy != null" >
        UPDATE_BY,
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="loginId != null" >
        #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null" >
        #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=BIGINT},
      </if>
      <if test="userRight != null" >
        #{userRight,jdbcType=BIGINT},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update s_user
    <set >
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.loginId != null" >
        LOGIN_ID = #{record.loginId,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.passWord != null" >
        PASS_WORD = #{record.passWord,jdbcType=VARCHAR},
      </if>
      <if test="record.role != null" >
        ROLE = #{record.role,jdbcType=BIGINT},
      </if>
      <if test="record.userRight != null" >
        USER_RIGHT = #{record.userRight,jdbcType=BIGINT},
      </if>
      <if test="record.createBy != null" >
        CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null" >
        UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update s_user
    set USER_ID = #{record.userId,jdbcType=BIGINT},
      LOGIN_ID = #{record.loginId,jdbcType=VARCHAR},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      PASS_WORD = #{record.passWord,jdbcType=VARCHAR},
      ROLE = #{record.role,jdbcType=BIGINT},
      USER_RIGHT = #{record.userRight,jdbcType=BIGINT},
      CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
      CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
      UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hs.server.domain.User" >
    update s_user
    <set >
      <if test="loginId != null" >
        LOGIN_ID = #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null" >
        PASS_WORD = #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        ROLE = #{role,jdbcType=BIGINT},
      </if>
      <if test="userRight != null" >
        USER_RIGHT = #{userRight,jdbcType=BIGINT},
      </if>
      <if test="createBy != null" >
        CREATE_BY = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hs.server.domain.User" >
    update s_user
    set LOGIN_ID = #{loginId,jdbcType=VARCHAR},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      PASS_WORD = #{passWord,jdbcType=VARCHAR},
      ROLE = #{role,jdbcType=BIGINT},
      USER_RIGHT = #{userRight,jdbcType=BIGINT},
      CREATE_BY = #{createBy,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP}
    where USER_ID = #{userId,jdbcType=BIGINT}
  </update>
</mapper>